@startuml
title UML Entreprise de vente

package Produit {

class Produit {
  reference : string {key}
  prixReference : float
  description : string
  extensionGarantie : boolean
  consommation[0..1]: integer
}


Produit "0..*" --  "0..*" Produit : compatible avec

Marque "1" -- "*" Produit : fabrique >

class Marque {
	nom : string {key}
}

class Categorie {
	nom : string {key}
}

class SousCategorie {
	nom : string {key}
}

SousCategorie "*" --* Categorie
Produit  "*" -- "1" SousCategorie : appartient à
}


class OccurenceProduit {
  numeroDeSerie : integer {key}
  prixAffiche : float
}

OccurenceProduit  "*" -- "1" Produit : correspond à

class Fournisseur {
	nom : string {key}
}

Fournisseur "1" -- "*" OccurenceProduit : fourni >

class Facture {
  numeroFacture : integer {key}
  totalsansRemise : float 
  remise[0..1] : float
  supplement [0..1] : float
  totalFinal : float
}


class Client { 
  nom : string {key}
  prenom : string {key}
  dateNaissance : string {key}
  adresseMail : string
  typeClient : ['Professionel', 'Particulier']
}
Facture "1..*" -- "1" Client : paye <

Facture "0..*" -- "1..*" OccurenceProduit : contient >


package Personnel {
  
abstract class Personnel {
  idPersonnel: integer {key}
  nom : string 
  prenom : string 
}

class PersonnelAchat{
}

class PersonnelVente{
}

class PersonnelSAV{
}

class PersonnelReparation{
}

Personnel <|-- PersonnelAchat
Personnel <|-- PersonnelVente
Personnel <|-- PersonnelReparation
Personnel <|-- PersonnelSAV
}

PersonnelVente "1" -- "*" Facture : réalise >
PersonnelSAV "1" -- "*" TicketPriseEnCharge : crée >
PersonnelAchat "1" -- "*" BonDeCommande : valide >
PersonnelVente "1" -- "*" BonDeCommande : crée >

class TicketPriseEnCharge {
  date : string 
  ticketTraité : boolean
}
TicketPriseEnCharge "0..1" -- "1" OccurenceProduit: concerne >

class BonDeCommande {
  date : string
  quantite : integer
  prixUnitaire : float
  bonTraité : boolean
}

BonDeCommande "0..N" -- "1" Produit: concerne >

class Reparation  {
  tempsPassé : float 
  materielUtilisé : string
}

class Reprise  {
  contre-partie : string
}


note right of TicketPriseEnCharge
    concerne Reparation XOR concerne Reprise
end note
TicketPriseEnCharge "1" -- "0..1" Reparation : concerne >
Reparation "0..1" -- "1" Facture : donne lieu >
TicketPriseEnCharge "1" -- "0..1" Reprise : concerne >
Reprise "0..1" -- "1" Facture : donne lieu >

Facture "1" -- "0..1" Vente : donne lieu <
class Vente  {
  installationRequise : boolean 
}
@enduml